{"ast":null,"code":"var _jsxFileName = \"/Users/georgezhang/Desktop/Test/app/test/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      event.preventDefault();\n      let username = this.state.username;\n      var validcharacters = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n      for (var i = 0, l = username.length; i < l; ++i) {\n        if (validcharacters.indexOf(username.substr(i, 1)) == -1 || l == 0) {\n          alert(\"Username must contain only numbers and letters\");\n          break;\n        }\n      }\n\n      let age = this.state.age;\n\n      if (!Number(age)) {\n        alert(\"Your age must be a number\");\n      }\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      }); // rerenders components on changes\n    };\n\n    this.state = {\n      username: '',\n      age: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Hi \", this.state.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Enter your name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Enter your age:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"age\",\n      onChange: this.myChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(MyForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/georgezhang/Desktop/Test/app/test/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","MyForm","Component","constructor","props","mySubmitHandler","event","preventDefault","username","state","validcharacters","i","l","length","indexOf","substr","alert","age","Number","myChangeHandler","nam","target","name","val","value","setState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,eAPmB,GAOAC,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA1B;AACA,UAAIE,eAAe,GAAG,gEAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGJ,QAAQ,CAACK,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4C,EAAED,CAA9C,EAAiD;AAC7C,YAAID,eAAe,CAACI,OAAhB,CAAwBN,QAAQ,CAACO,MAAT,CAAgBJ,CAAhB,EAAmB,CAAnB,CAAxB,KAAkD,CAAC,CAAnD,IAAwDC,CAAC,IAAI,CAAjE,EAAoE;AAChEI,UAAAA,KAAK,CAAC,gDAAD,CAAL;AACA;AACH;AACJ;;AAED,UAAIC,GAAG,GAAG,KAAKR,KAAL,CAAWQ,GAArB;;AACA,UAAI,CAACC,MAAM,CAACD,GAAD,CAAX,EAAkB;AAChBD,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;AACF,KAvBkB;;AAAA,SAwBnBG,eAxBmB,GAwBAb,KAAD,IAAW;AAC3B,UAAIc,GAAG,GAAGd,KAAK,CAACe,MAAN,CAAaC,IAAvB;AACA,UAAIC,GAAG,GAAGjB,KAAK,CAACe,MAAN,CAAaG,KAAvB;AACA,WAAKC,QAAL,CAAc;AAAC,SAACL,GAAD,GAAOG;AAAR,OAAd,EAH2B,CAGE;AAC9B,KA5BkB;;AAEjB,SAAKd,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE,EADC;AAEXS,MAAAA,GAAG,EAAE;AAFM,KAAb;AAID;;AAuBDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKrB,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ,KAAKI,KAAL,CAAWD,QAAnB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFA,EAGA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,QAAQ,EAAE,KAAKW,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARA,EASA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,QAAQ,EAAE,KAAKA,eAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfA,EAgBA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBA,CADF;AAoBD;;AAnDgC;;AAsDnCrB,QAAQ,CAAC4B,MAAT,CAAgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B,E,CAEF;AACA;AACA;;AACA5B,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nclass MyForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        age: null,\n      };\n    }\n    mySubmitHandler = (event) => {\n      event.preventDefault();\n\n      let username = this.state.username;\n      var validcharacters = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n      for (var i = 0, l = username.length; i < l; ++i) {\n          if (validcharacters.indexOf(username.substr(i, 1)) == -1 || l == 0) {\n              alert(\"Username must contain only numbers and letters\");\n              break;\n          }\n      }\n\n      let age = this.state.age;\n      if (!Number(age)) {\n        alert(\"Your age must be a number\");\n      }\n    }\n    myChangeHandler = (event) => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({[nam]: val}); // rerenders components on changes\n    }\n    render() {\n      return (\n        <form onSubmit={this.mySubmitHandler}>\n        <h1>Hi {this.state.username}</h1>\n        <p>Enter your name:</p>\n        <input\n          type='text'\n          name='username'\n          onChange={this.myChangeHandler}\n        />\n        <p>Enter your age:</p>\n        <input\n          type='text'\n          name='age'\n          onChange={this.myChangeHandler}\n        />\n        <br/>\n        <br/>\n        <input type='submit' />\n        </form>\n      );\n    }\n  }\n  \n  ReactDOM.render(<MyForm />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}